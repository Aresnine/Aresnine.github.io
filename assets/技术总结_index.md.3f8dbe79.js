import{_ as s,o as n,c as a,e as l}from"./app.db42a1fc.js";const E=JSON.parse('{"title":"技术总结","description":"","frontmatter":{},"headers":[{"level":2,"title":"1、微信环境下，网页不受微信字体影响","slug":"_1、微信环境下-网页不受微信字体影响","link":"#_1、微信环境下-网页不受微信字体影响","children":[]},{"level":2,"title":"2、git报PRC或者网络如error:PRC failed","slug":"_2、git报prc或者网络如error-prc-failed","link":"#_2、git报prc或者网络如error-prc-failed","children":[]},{"level":2,"title":"3、全球低代码平台","slug":"_3、全球低代码平台","link":"#_3、全球低代码平台","children":[]},{"level":2,"title":"4、JSON反射生成vue文件","slug":"_4、json反射生成vue文件","link":"#_4、json反射生成vue文件","children":[]},{"level":2,"title":"5、全屏展示功能","slug":"_5、全屏展示功能","link":"#_5、全屏展示功能","children":[]},{"level":2,"title":"6、sass在vite中的使用","slug":"_6、sass在vite中的使用","link":"#_6、sass在vite中的使用","children":[]},{"level":2,"title":"7、elementPlus的自动引入","slug":"_7、elementplus的自动引入","link":"#_7、elementplus的自动引入","children":[]},{"level":2,"title":"8、v-model","slug":"_8、v-model","link":"#_8、v-model","children":[]},{"level":2,"title":"9、pnpm 忽略 lock文件","slug":"_9、pnpm-忽略-lock文件","link":"#_9、pnpm-忽略-lock文件","children":[]},{"level":2,"title":"10、ts中常用Event事件类型","slug":"_10、ts中常用event事件类型","link":"#_10、ts中常用event事件类型","children":[]},{"level":2,"title":"11、namespaced:true","slug":"_11、namespaced-true","link":"#_11、namespaced-true","children":[]},{"level":2,"title":"12、pinia两种写法","slug":"_12、pinia两种写法","link":"#_12、pinia两种写法","children":[]},{"level":2,"title":"13、lodash的使用","slug":"_13、lodash的使用","link":"#_13、lodash的使用","children":[]},{"level":2,"title":"其他待整理","slug":"其他待整理","link":"#其他待整理","children":[]}],"relativePath":"技术总结/index.md"}'),p={name:"技术总结/index.md"},o=l(`<h1 id="技术总结" tabindex="-1">技术总结 <a class="header-anchor" href="#技术总结" aria-hidden="true">#</a></h1><h2 id="_1、微信环境下-网页不受微信字体影响" tabindex="-1">1、微信环境下，网页不受微信字体影响 <a class="header-anchor" href="#_1、微信环境下-网页不受微信字体影响" aria-hidden="true">#</a></h2><blockquote><p>安卓:</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 强制禁止用户修改微信客户端的字体大小</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">       (function() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">           </span><span style="color:#82AAFF;">if</span><span style="color:#BABED8;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> WeixinJSBridge </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> WeixinJSBridge</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">invoke </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">               </span><span style="color:#F07178;">handleFontSize</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;">;</span></span>
<span class="line"><span style="color:#BABED8;">           </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> else </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">               </span><span style="color:#F07178;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">document.addEventListener</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                   </span><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WeixinJSBridgeReady</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">handleFontSize</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">               </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> else </span><span style="color:#F07178;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">document.attachEvent</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                   </span><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">attachEvent</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WeixinJSBridgeReady</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">handleFontSize</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                   </span><span style="color:#BABED8;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">attachEvent</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">onWeixinJSBridgeReady</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">handleFontSize</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">           </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">           </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">handleFontSize</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">               </span><span style="color:#676E95;font-style:italic;">// 设置网页字体为默认大小</span></span>
<span class="line"><span style="color:#F07178;">               </span><span style="color:#BABED8;">WeixinJSBridge</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">invoke</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">setFontSizeCallback</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">fontSize</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">               </span><span style="color:#676E95;font-style:italic;">// 重写设置网页字体大小的事件</span></span>
<span class="line"><span style="color:#F07178;">               </span><span style="color:#BABED8;">WeixinJSBridge</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">menu:setfont</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                   </span><span style="color:#BABED8;">WeixinJSBridge</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">invoke</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">setFontSizeCallback</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">fontSize</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">               </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">       </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)();</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>苹果：</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* iOS禁止微信调整字体大小 */</span></span>
<span class="line"><span style="color:#FFCB6B;">body</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">-webkit-text-size-adjust</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">!important</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#B2CCD6;">text-size-adjust</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">!important</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">-moz-text-size-adjust</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">!important</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_2、git报prc或者网络如error-prc-failed" tabindex="-1">2、git报PRC或者网络如error:PRC failed <a class="header-anchor" href="#_2、git报prc或者网络如error-prc-failed" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;">1.  使用&quot;git config --list&quot;查看&quot;http.postBuffer&quot;参数的目前值，如果没有设置，默认值是1兆，确认目前值确实较小。 </span></span>
<span class="line"><span style="color:#babed8;">2.  使用&quot;git config --global http.postBuffer &lt;xxx&gt;&quot;其中xxx单位为Byte，比如设置524288000（512MB） </span></span>
<span class="line"><span style="color:#babed8;">3.  重新运行git远程命令，命令可以成功 </span></span>
<span class="line"><span style="color:#babed8;"></span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_3、全球低代码平台" tabindex="-1">3、全球低代码平台 <a class="header-anchor" href="#_3、全球低代码平台" aria-hidden="true">#</a></h2><p>低代码是一种通过简化应用程序的创建、维护和更新过程来提高开发效率的开发模式。它可以让非技术人员或小规模开发团队快速构建应用程序，降低开发成本和时间。</p><p>现在在业界内，低代码的方案有很多，比如以下几个：</p><ol><li>Microsoft Power Platform</li></ol><p>Power Platform是由微软推出的一套低代码开发平台，包括Power Apps、Power BI和Power Automate。Power Apps可以让用户使用低代码来快速构建自定义的业务应用，Power BI可以帮助用户从各种数据源中汇总和分析数据，并将其可视化呈现，Power Automate支持自动化业务流程以提高生产效率。</p><ol start="2"><li>Google App Maker</li></ol><p>App Maker是由谷歌提供的一套简单易用的低代码开发平台，用户可以通过拖放绑定数据等方式，构建自定义的业务应用程序。App Maker提供了很多预定义的应用程序模板和组件，包括报告、表单、工作流等。</p><ol start="3"><li>Mendix</li></ol><p>Mendix是一款强大的低代码开发平台，用户可以使用Mendix提供的图形化开发工具来自定义应用程序，并使用Mendix提供的一系列功能和组件，如数据集成、安全性、扩展性、可维护性等，来简化应用程序开发和维护流程。</p><ol start="4"><li>OutSystems</li></ol><p>OutSystems是一家葡萄牙的低代码开发平台提供商，他们提供了一套完整的低代码开发平台，用户可以从OutSystems平台中获取集成、安全、用户体验、测试和部署等方面的支持，排除开发中的各种麻烦，提高开发效率。</p><ol start="5"><li>Appian</li></ol><p>Appian是一款简单易用的低代码开发平台，用户可以简单地构建自定义的业务应用程序，包括报告、表单、工作流等，并使用Appian的一系列功能和组件来简化开发过程。Appian还支持跨多个设备和平台部署。</p><p>总的来说，低代码方案使应用程序开发变得更加容易和快捷，因为用户无需编写大量的代码，也不需要具备高深的编程技能。低代码方案通过提供基础架构、组件和集成支持等，使得应用程序开发过程更加轻松和高效。</p><h2 id="_4、json反射生成vue文件" tabindex="-1">4、JSON反射生成vue文件 <a class="header-anchor" href="#_4、json反射生成vue文件" aria-hidden="true">#</a></h2><p>通过json数据生成vue文件是一个比较复杂的过程，需要进行大量的数据处理和模板操作。以下是一些大致的思路和操作流程。</p><ol><li><p>解析json数据，分析数据结构和内容，并提取所需信息，如组件名称、数据、方法等。</p></li><li><p>根据提取的信息，生成vue组件的模板代码。可以使用类似ejs、handlebars等模板引擎，或者直接使用字符串拼接，将生成的代码转化为字符串形式。</p></li><li><p>使用文件系统API（如fs等），创建文件并将vue组件的模板代码写入到文件中。</p></li><li><p>如果需要，可以使用脚本或其他工具，将Vue组件中使用的依赖包进行自动引入，或者执行其他一些自动化操作。</p></li></ol><p>以下给出简单的代码示例，来演示如何基于json数据，生成vue组件的过程：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> fs </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> ejs </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">require</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ejs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 读取json文件并解析</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readFileSync</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./data.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">utf8</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> jsonData </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#BABED8;">(data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 解析数据，获取所需信息</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> componentName </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> jsonData</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">name</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> dataStr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#BABED8;">(jsonData</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> methods </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> jsonData</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">methods </span><span style="color:#89DDFF;">||</span><span style="color:#BABED8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 生成vue组件的模板代码</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> template </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> ejs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;!-- TODO: Add component content here --&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;/div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;/template&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">&lt;script&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">export default {</span></span>
<span class="line"><span style="color:#C3E88D;">  name: &#39;&lt;%= componentName %&gt;&#39;,</span></span>
<span class="line"><span style="color:#C3E88D;">  data() {</span></span>
<span class="line"><span style="color:#C3E88D;">    return &lt;%= dataStr %&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  },</span></span>
<span class="line"><span style="color:#C3E88D;">  methods: {</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;% methods.forEach(method =&gt; { %&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;%= method %&gt;() {</span></span>
<span class="line"><span style="color:#C3E88D;">      // TODO: Add method implementation here</span></span>
<span class="line"><span style="color:#C3E88D;">    },</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;% }); %&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;/script&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">&lt;style scoped&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">/* TODO: Add component styles here */</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;/style&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;">componentName</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> dataStr</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> methods</span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建vue文件并写入模板代码</span></span>
<span class="line"><span style="color:#BABED8;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">writeFile</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">./</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">componentName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.vue</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> template</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">err</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">File &#39;</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">componentName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.vue&#39; created successfully!</span><span style="color:#89DDFF;">\`</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre></div><p>需要注意的是，此示例只是基于json数据简单生成了一个最基础的Vue单文件组件代码。在实际应用中，还需要进行更多的处理和判断，以确保生成的代码符合Vue的基本要求和最佳实践，能够正常运行和使用。</p><h2 id="_5、全屏展示功能" tabindex="-1">5、全屏展示功能 <a class="header-anchor" href="#_5、全屏展示功能" aria-hidden="true">#</a></h2><p>1、安装插件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">pnpm add screenfull --save</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>2、在vue文件中使用</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width: 100%;height: 100%;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">float: right;height: 100%;position: relative;display: flex;align-items: center;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">el-button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">screenfullClick</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">{{ isFullscreen ? &#39;退出全屏&#39; : &#39;全屏展示&#39; }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">el-button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//  按需引入 screenfull</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> screenfull </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">screenfull</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">ref</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">onMounted</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">onUnmounted</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> isFullscreen </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">onMounted</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">resize</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">currentScreen</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">onUnmounted</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">window</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">resize</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">currentScreen</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 浏览器改变触发</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> currentScreen </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">screenfull</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isFullscreen</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">isFullscreen</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">) </span><span style="color:#BABED8;">isFullscreen</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">screenfull</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isFullscreen</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//  点击切换全屏</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> screenfullClick </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">screenfull</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isEnabled</span><span style="color:#F07178;">) </span><span style="color:#BABED8;">screenfull</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toggle</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">top-right</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> right</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="_6、sass在vite中的使用" tabindex="-1">6、sass在vite中的使用 <a class="header-anchor" href="#_6、sass在vite中的使用" aria-hidden="true">#</a></h2><p>1、安装，vite现在只需要安装就可以，已经内置解析支持</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">pnpm add -D sass</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_7、elementplus的自动引入" tabindex="-1">7、elementPlus的自动引入 <a class="header-anchor" href="#_7、elementplus的自动引入" aria-hidden="true">#</a></h2><p>1、安装elementPlus</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">pnpm i element-plus</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>2、安装自动导入插件</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">pnpm install -D unplugin-vue-components unplugin-auto-import</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>3、vite配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> AutoImport </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unplugin-auto-import/vite</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Components </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unplugin-vue-components/vite</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">ElementPlusResolver</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unplugin-vue-components/resolvers</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">AutoImport</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">resolvers</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#82AAFF;">ElementPlusResolver</span><span style="color:#BABED8;">()]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">Components</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">resolvers</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#82AAFF;">ElementPlusResolver</span><span style="color:#BABED8;">()]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="_8、v-model" tabindex="-1">8、v-model <a class="header-anchor" href="#_8、v-model" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">1、父组件 v-model:name=&quot;变量&quot;</span></span>
<span class="line"><span style="color:#babed8;">2、子组件</span></span>
<span class="line"><span style="color:#babed8;">	a、接收属性： const props = defineProps[&#39;name&#39;]</span></span>
<span class="line"><span style="color:#babed8;">	b、接收事件： const emit = defineEmits([&#39;update:name&#39;])</span></span>
<span class="line"><span style="color:#babed8;">3、子组件修改</span></span>
<span class="line"><span style="color:#babed8;">	emit(&#39;update:name&#39;,值)</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="_9、pnpm-忽略-lock文件" tabindex="-1">9、pnpm 忽略 lock文件 <a class="header-anchor" href="#_9、pnpm-忽略-lock文件" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--no-frozen-lockfile</span></span>
<span class="line"></span></code></pre></div><h2 id="_10、ts中常用event事件类型" tabindex="-1">10、ts中常用Event事件类型 <a class="header-anchor" href="#_10、ts中常用event事件类型" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">ClipboardEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 剪贴板事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">DragEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 拖拽事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">ChangeEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> Change 事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">KeyboardEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 键盘事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">MouseEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 鼠标事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">TouchEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 触摸事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">WheelEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 滚轮事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">AnimationEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 动画事件对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">TransitionEvent</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">T </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Element</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 过渡事件对象</span></span>
<span class="line"></span></code></pre></div><h2 id="_11、namespaced-true" tabindex="-1">11、namespaced:true <a class="header-anchor" href="#_11、namespaced-true" aria-hidden="true">#</a></h2><p>这个是为了解决不同模块命名冲突的问题，将不同模块的namespaced:true，之后在不同页面中引入getter、actions、mutations时，需要加上所属的模块名</p><h2 id="_12、pinia两种写法" tabindex="-1">12、pinia两种写法 <a class="header-anchor" href="#_12、pinia两种写法" aria-hidden="true">#</a></h2><p>optionStore和setupStore两种写法</p><p>function相当于actions、computed相当于getter、ref相当于state</p><blockquote><p>optionStore</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> useCounterStore </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineStore</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">state</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> (</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">getters</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">double</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">state</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> state</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">count </span><span style="color:#89DDFF;">*</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">actions</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">increment</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">count</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>setupStore</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> useCounterStore </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineStore</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">counter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">count</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">increment</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">count</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">count</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">increment</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="_13、lodash的使用" tabindex="-1">13、lodash的使用 <a class="header-anchor" href="#_13、lodash的使用" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">pnpm i lodash-es -S</span></span>
<span class="line"><span style="color:#babed8;">pnpm i -D @types/lodash</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><h2 id="其他待整理" tabindex="-1">其他待整理 <a class="header-anchor" href="#其他待整理" aria-hidden="true">#</a></h2><p>1、工具函数导出：<a href="https://zhuanlan.zhihu.com/p/443175985" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/443175985</a></p><p>2、<a href="https://zhuanlan.zhihu.com/p/443175985" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/443175985</a></p><p>3、ref、torefs、reative</p><p><a href="https://juejin.cn/post/7013326406444646407" target="_blank" rel="noreferrer">https://juejin.cn/post/7013326406444646407</a></p><p>4、jsonschema</p><p><a href="https://juejin.cn/post/7209698674905350205" target="_blank" rel="noreferrer">https://juejin.cn/post/7209698674905350205</a></p><p><a href="https://juejin.cn/post/6844903829947826189" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903829947826189</a></p><p><a href="https://juejin.cn/post/7205773311606554679" target="_blank" rel="noreferrer">https://juejin.cn/post/7205773311606554679</a></p><p><a href="https://juejin.cn/post/6844903576729305096" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903576729305096</a></p><p><a href="https://juejin.cn/post/7071174879778242568" target="_blank" rel="noreferrer">https://juejin.cn/post/7071174879778242568</a></p><p>5、ts中引入库的正确姿势</p><p><a href="https://juejin.cn/post/7052528116345864228" target="_blank" rel="noreferrer">https://juejin.cn/post/7052528116345864228</a></p><p><a href="https://cloud.tencent.com/developer/article/2039066" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/2039066</a></p><p><a href="https://juejin.cn/post/7211437215336333372" target="_blank" rel="noreferrer">https://juejin.cn/post/7211437215336333372</a></p><p><a href="https://juejin.cn/post/7081628820188430344" target="_blank" rel="noreferrer">https://juejin.cn/post/7081628820188430344</a></p><p><a href="https://blog.battlefy.com/tree-shaking-lodash-with-vite" target="_blank" rel="noreferrer">https://blog.battlefy.com/tree-shaking-lodash-with-vite</a></p><p>6、chatgpt</p><p><a href="https://blog.csdn.net/JakeMa1024/article/details/129030002" target="_blank" rel="noreferrer">https://blog.csdn.net/JakeMa1024/article/details/129030002</a></p><p><a href="https://zhuanlan.zhihu.com/p/612351471" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/612351471</a></p><p>7、</p><ul><li>v-text 支持<code>?:;</code>但是不支持<code>??</code></li><li><a href="http://note.q123q.cn/my/work_2021hy/2nodelib/typeorm-date.html" target="_blank" rel="noreferrer">http://note.q123q.cn/my/work_2021hy/2nodelib/typeorm-date.html</a></li><li><a href="https://xugaoyi.com/" target="_blank" rel="noreferrer">https://xugaoyi.com/</a></li></ul><p>8、</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * axios封装</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 接口请求统一处理，返回Promise对象</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 可根据项目需要，进一步封装添加拦截器等</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> axios</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AxiosInstance</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AxiosRequestConfig</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">AxiosResponse</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 定义接口返回数据类型</span></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ResponseData</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">code</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">message</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建axios实例</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> request</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AxiosInstance</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 接口统一的请求路径前缀</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">baseURL</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">VUE_APP_BASE_API</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 允许跨域请求携带cookies等凭证</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">withCredentials</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 设置请求超时时间</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">10000</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 请求拦截器</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">interceptors</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">config</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AxiosRequestConfig</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// const token = localStorage.getItem(&#39;token&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// if (token) {</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//   config.headers.Authorization = token</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">config</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">error</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 响应拦截器</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">interceptors</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#BABED8;">(</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">response</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">AxiosResponse</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 根据实际返回自定义统一处理</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">res</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">response</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ResponseData</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">code</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">200</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">message</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">message</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Error</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">error</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">err</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reject</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">error</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> request</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用方法</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> request </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/utils/request</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GET请求，url参数传递</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user?ID=12345</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// GET请求，params参数传递</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ID</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">12345</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// POST请求，data参数传递</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">firstName</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Fred</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">lastName</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Flintstone</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// PUT请求</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">firstName</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Barney</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">lastName</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Rubble</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// DELETE请求</span></span>
<span class="line"><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">ID</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">12345</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#BABED8;">Vue 3引入了一整套新的API，用于替换Vue 2中的选项和mixins，包括了一些新的Hooks API，可用于处理逻辑和数据的复用。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">1.</span><span style="color:#BABED8;"> useState</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">作用：在组件中声明响应式状态。</span></span>
<span class="line"><span style="color:#FFCB6B;">语法</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">state</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> setState</span><span style="color:#89DDFF;">]</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useState</span><span style="color:#BABED8;">(initialState)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">示例：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">​</span><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">javascript</span></span>
<span class="line"><span style="color:#C3E88D;">import { defineComponent, onMounted, useState } from &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">export default defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  setup() {</span></span>
<span class="line"><span style="color:#C3E88D;">    const [count, setCount] = useState(0)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    const increment = () =&gt; {</span></span>
<span class="line"><span style="color:#C3E88D;">      setCount(count.value + 1)</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    onMounted(() =&gt; {</span></span>
<span class="line"><span style="color:#C3E88D;">      console.log(&#39;Mounted&#39;)</span></span>
<span class="line"><span style="color:#C3E88D;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      count,</span></span>
<span class="line"><span style="color:#C3E88D;">      increment</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#BABED8;"> useEffect</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">作用：在组件生命周期的特定时间调用副作用，比如API请求、订阅等。</span></span>
<span class="line"><span style="color:#FFCB6B;">语法</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useEffect</span><span style="color:#BABED8;">(callback: </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">void,</span><span style="color:#BABED8;"> deps</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> any[])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">示例：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">javascript</span></span>
<span class="line"><span style="color:#C3E88D;">import { defineComponent, onMounted, useState, useEffect } from &#39;vue&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">import axios from &#39;axios&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">export default defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  setup() {</span></span>
<span class="line"><span style="color:#C3E88D;">    const [users, setUsers] = useState([])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    useEffect(() =&gt; {</span></span>
<span class="line"><span style="color:#C3E88D;">      axios.get(&#39;https://jsonplaceholder.typicode.com/users&#39;).then(res =&gt; {</span></span>
<span class="line"><span style="color:#C3E88D;">        setUsers(res.data)</span></span>
<span class="line"><span style="color:#C3E88D;">      })</span></span>
<span class="line"><span style="color:#C3E88D;">    }, [])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      users</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">3.</span><span style="color:#BABED8;"> useRef</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">作用：在组件之间共享可变值。</span></span>
<span class="line"><span style="color:#FFCB6B;">语法</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> refContainer </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useRef</span><span style="color:#BABED8;">(initialValue)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">示例：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">javascript</span></span>
<span class="line"><span style="color:#C3E88D;">import { defineComponent, onMounted, useRef } from &#39;vue&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">import Child from &#39;./Child.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">export default defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  setup() {</span></span>
<span class="line"><span style="color:#C3E88D;">    const nameInput = useRef(&#39;&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    const handleFocus = () =&gt; {</span></span>
<span class="line"><span style="color:#C3E88D;">      nameInput.value.focus()</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      nameInput,</span></span>
<span class="line"><span style="color:#C3E88D;">      handleFocus</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  },</span></span>
<span class="line"><span style="color:#C3E88D;">  components: {</span></span>
<span class="line"><span style="color:#C3E88D;">    Child</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">vue</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;input type=&quot;text&quot; ref=&quot;nameInput&quot; /&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;button @click=&quot;handleFocus&quot;&gt;Focus&lt;/button&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;Child ref=&quot;child&quot; /&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;/div&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;/template&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">4.</span><span style="color:#BABED8;"> useContext</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">作用：在组件树中获取全局状态或方法。</span></span>
<span class="line"><span style="color:#FFCB6B;">语法</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> contextValue </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useContext</span><span style="color:#BABED8;">(context)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">示例：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">javascript</span></span>
<span class="line"><span style="color:#C3E88D;">import { createContext, defineComponent, useContext } from &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">const UserContext = createContext()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">const Parent = defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  setup() {</span></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      user: {</span></span>
<span class="line"><span style="color:#C3E88D;">        name: &#39;Tom&#39;,</span></span>
<span class="line"><span style="color:#C3E88D;">        age: 18</span></span>
<span class="line"><span style="color:#C3E88D;">      }</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  },</span></span>
<span class="line"><span style="color:#C3E88D;">  provide() {</span></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      user: this.user</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  },</span></span>
<span class="line"><span style="color:#C3E88D;">  components: {</span></span>
<span class="line"><span style="color:#C3E88D;">    Child</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">const Child = defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  setup() {</span></span>
<span class="line"><span style="color:#C3E88D;">    const user = useContext(UserContext)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      user</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">export default defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  setup() {</span></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      UserContext</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  },</span></span>
<span class="line"><span style="color:#C3E88D;">  components: {</span></span>
<span class="line"><span style="color:#C3E88D;">    Parent</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">vue</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;UserContext.Provider :value=&quot;user&quot;&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">    &lt;Parent /&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">  &lt;/UserContext.Provider&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">&lt;/template&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">5.</span><span style="color:#BABED8;"> useWatch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">作用：监听变量或prop的变化。</span></span>
<span class="line"><span style="color:#FFCB6B;">语法</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useWatch</span><span style="color:#BABED8;">(source: Ref </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> any </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> (</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> any)[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> cb: </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">newVal</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">oldVal</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">void,</span><span style="color:#BABED8;"> options</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> WatchOptions)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">示例：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#C3E88D;">javascript</span></span>
<span class="line"><span style="color:#C3E88D;">import { defineComponent, useWatch } from &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">export default defineComponent({</span></span>
<span class="line"><span style="color:#C3E88D;">  props: {</span></span>
<span class="line"><span style="color:#C3E88D;">    name: String</span></span>
<span class="line"><span style="color:#C3E88D;">  },</span></span>
<span class="line"><span style="color:#C3E88D;">  setup(props) {</span></span>
<span class="line"><span style="color:#C3E88D;">    useWatch(() =&gt; props.name, (newVal, oldVal) =&gt; {</span></span>
<span class="line"><span style="color:#C3E88D;">      console.log(&#39;Name changed:&#39;, newVal, oldVal)</span></span>
<span class="line"><span style="color:#C3E88D;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">    return {</span></span>
<span class="line"><span style="color:#C3E88D;">      props</span></span>
<span class="line"><span style="color:#C3E88D;">    }</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">})</span></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,85),e=[o];function t(c,r,y,D,F,i){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{E as __pageData,A as default};
